generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model booking {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_time       DateTime @db.Timestamp(6)
  end_time         DateTime @db.Timestamp(6)
  pickup_location  String   @db.VarChar(255)
  dropoff_location String   @db.VarChar(255)
  car_id           String   @db.Uuid
  customer_id      String   @db.Uuid
  created_at       DateTime @default(now()) @db.Timestamp(6)
  updated_at       DateTime @default(now()) @db.Timestamp(6)
  car              car      @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user             user     @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model car {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  make          String    @db.VarChar(255)
  model         String    @db.VarChar(255)
  year          Int
  color         String?   @db.VarChar(255)
  license_plate String    @db.VarChar(255)
  owner_id      String    @db.Uuid
  created_at    DateTime  @default(now()) @db.Timestamp(6)
  updated_at    DateTime  @default(now()) @db.Timestamp(6)
  booking       booking[]
  user          user      @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  review        review[]
}

model guest {
  id           String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username     String   @db.VarChar(255)
  password     String   @db.VarChar(255)
  first_name   String?  @db.VarChar(255)
  last_name    String?  @db.VarChar(255)
  phone_number String?  @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
}

model regular {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model review {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  rating      Int
  comment     String?  @db.VarChar(255)
  car_id      String   @db.Uuid
  customer_id String   @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  car         car      @relation(fields: [car_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user     @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  booking     booking[]
  car         car[]
  regular     regular[]
  review      review[]
}
